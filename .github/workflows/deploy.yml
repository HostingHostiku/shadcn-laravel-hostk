name: Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH key and known hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Clean dev files to make sure everything is clean before deploy
        run: |
          echo "Clean old dev files ..."
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && rm -rf resources/js"
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && rm -rf *.*"
          echo "Dev files clean"

      - name: Build frontend assets
        run: |
          echo "Building frontend assets..."
          yarn install
          yarn build
          echo "Frontend assets built."

      - name: Deploy code using rsync
        run: |
          echo "Starting rsync deployment..."
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" \
          --exclude .env --exclude .env.example --exclude .git --exclude .github --exclude .editorconfig \
          --exclude vendor --exclude node_modules --exclude tests --exclude storage \
          --exclude .gitattributes --exclude .gitignore --exclude README.md --exclude .env.testing --exclude .prettierrc \
          --exclude package.json --exclude yarn.lock --exclude package-lock.json\
          $GITHUB_WORKSPACE/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.WORK_DIR }}/
          echo "Code deployment completed."

      - name: Restart Docker containers
        run: |
          echo "Restarting Docker containers..."
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.DOCKER_DIR }} && docker compose down"
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.DOCKER_DIR }} && docker compose up -d"
          echo "Docker containers restarted."

      - name: Install backend dependencies on server
        run: |
          echo "Installing backend dependencies..."
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && docker exec -i laravel composer install"
          echo "Backend dependencies installed."

      - name: Run database migrations
        run: |
          echo "Running database migrations..."
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && docker exec -i laravel php artisan migrate --force"
          echo "Database migrations completed."

      - name: Clear application cache
        run: |
          echo "Clearing application cache..."
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && docker exec -i laravel php artisan cache:clear"
          echo "Application cache cleared."

      - name: Optimize Laravel application
        run: |
          echo "Clearing and optimizing application cache..."
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && docker exec -i laravel php artisan optimize:clear"
          echo "Application optimized."
